'use strict';

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _desired = require('../desired');

var _helpersSession = require('../helpers/session');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

var driver = undefined;
var caps = _Object$assign({}, _desired.BROWSER_CAPS);

describe('setUrl @skip-ci', function () {
  var _this = this;

  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersSession.initDriver)(caps));

        case 2:
          driver = context$2$0.sent;

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          if (!driver) {
            context$2$0.next = 3;
            break;
          }

          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.quit());

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should be able to start a data uri via setUrl', function callee$1$0() {
    var btn, el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          if (!(caps.browserName === 'Chrome')) {
            context$2$0.next = 16;
            break;
          }

          context$2$0.prev = 1;
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.elementById('com.android.chrome:id/terms_accept'));

        case 4:
          btn = context$2$0.sent;
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(btn.click());

        case 7:
          context$2$0.next = 9;
          return _regeneratorRuntime.awrap(driver.elementById('com.android.chrome:id/negative_button'));

        case 9:
          btn = context$2$0.sent;
          context$2$0.next = 12;
          return _regeneratorRuntime.awrap(btn.click());

        case 12:
          context$2$0.next = 16;
          break;

        case 14:
          context$2$0.prev = 14;
          context$2$0.t0 = context$2$0['catch'](1);

        case 16:
          context$2$0.next = 18;
          return _regeneratorRuntime.awrap(driver.get('http://saucelabs.com'));

        case 18:
          context$2$0.next = 20;
          return _regeneratorRuntime.awrap(driver.waitForElementByTagName("title"));

        case 20:
          context$2$0.next = 22;
          return _regeneratorRuntime.awrap(driver.elementByTagName("title"));

        case 22:
          el = context$2$0.sent;
          context$2$0.next = 25;
          return _regeneratorRuntime.awrap(el.getAttribute("innerHTML").should.eventually.include('Sauce Labs'));

        case 25:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this, [[1, 14]]);
  });
});

// on some chrome systems, we always get the terms and conditions page
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9jb21tYW5kcy91cmwtZTJlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O29CQUFpQixNQUFNOzs7OzhCQUNJLGtCQUFrQjs7Ozt1QkFDaEIsWUFBWTs7OEJBQ2Qsb0JBQW9COztBQUUvQyxrQkFBSyxNQUFNLEVBQUUsQ0FBQztBQUNkLGtCQUFLLEdBQUcsNkJBQWdCLENBQUM7O0FBRXpCLElBQUksTUFBTSxZQUFBLENBQUM7QUFDWCxJQUFJLElBQUksR0FBRyxlQUFjLEVBQUUsd0JBQWUsQ0FBQzs7QUFFM0MsUUFBUSxDQUFDLGlCQUFpQixFQUFFLFlBQVk7OztBQUN0QyxRQUFNLENBQUM7Ozs7OzJDQUNVLGdDQUFXLElBQUksQ0FBQzs7O0FBQS9CLGdCQUFNOzs7Ozs7O0dBQ1AsQ0FBQyxDQUFDO0FBQ0gsT0FBSyxDQUFDOzs7O2VBQ0EsTUFBTTs7Ozs7OzJDQUNGLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Ozs7Ozs7R0FFdEIsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQywrQ0FBK0MsRUFBRTtRQUkxQyxHQUFHLEVBV1AsRUFBRTs7OztnQkFkRixJQUFJLENBQUMsV0FBVyxLQUFLLFFBQVEsQ0FBQTs7Ozs7OzsyQ0FHYixNQUFNLENBQUMsV0FBVyxDQUFDLG9DQUFvQyxDQUFDOzs7QUFBcEUsYUFBRzs7MkNBQ0QsR0FBRyxDQUFDLEtBQUssRUFBRTs7OzsyQ0FFTCxNQUFNLENBQUMsV0FBVyxDQUFDLHVDQUF1QyxDQUFDOzs7QUFBdkUsYUFBRzs7MkNBQ0csR0FBRyxDQUFDLEtBQUssRUFBRTs7Ozs7Ozs7Ozs7OzJDQUlmLE1BQU0sQ0FBQyxHQUFHLENBQUMsc0JBQXNCLENBQUM7Ozs7MkNBRWxDLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUM7Ozs7MkNBQzlCLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUM7OztBQUEzQyxZQUFFOzsyQ0FDQSxFQUFFLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQzs7Ozs7OztHQUMzRSxDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9mdW5jdGlvbmFsL2NvbW1hbmRzL3VybC1lMmUtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcbmltcG9ydCB7IEJST1dTRVJfQ0FQUyB9IGZyb20gJy4uL2Rlc2lyZWQnO1xuaW1wb3J0IHsgaW5pdERyaXZlciB9IGZyb20gJy4uL2hlbHBlcnMvc2Vzc2lvbic7XG5cbmNoYWkuc2hvdWxkKCk7XG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XG5cbmxldCBkcml2ZXI7XG5sZXQgY2FwcyA9IE9iamVjdC5hc3NpZ24oe30sIEJST1dTRVJfQ0FQUyk7XG5cbmRlc2NyaWJlKCdzZXRVcmwgQHNraXAtY2knLCBmdW5jdGlvbiAoKSB7XG4gIGJlZm9yZShhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgZHJpdmVyID0gYXdhaXQgaW5pdERyaXZlcihjYXBzKTtcbiAgfSk7XG4gIGFmdGVyKGFzeW5jICgpID0+IHtcbiAgICBpZiAoZHJpdmVyKSB7XG4gICAgICBhd2FpdCBkcml2ZXIucXVpdCgpO1xuICAgIH1cbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBiZSBhYmxlIHRvIHN0YXJ0IGEgZGF0YSB1cmkgdmlhIHNldFVybCcsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoY2Fwcy5icm93c2VyTmFtZSA9PT0gJ0Nocm9tZScpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIG9uIHNvbWUgY2hyb21lIHN5c3RlbXMsIHdlIGFsd2F5cyBnZXQgdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIHBhZ2VcbiAgICAgICAgbGV0IGJ0biA9IGF3YWl0IGRyaXZlci5lbGVtZW50QnlJZCgnY29tLmFuZHJvaWQuY2hyb21lOmlkL3Rlcm1zX2FjY2VwdCcpO1xuICAgICAgICBhd2FpdCBidG4uY2xpY2soKTtcblxuICAgICAgICBidG4gPSBhd2FpdCBkcml2ZXIuZWxlbWVudEJ5SWQoJ2NvbS5hbmRyb2lkLmNocm9tZTppZC9uZWdhdGl2ZV9idXR0b24nKTtcbiAgICAgICAgYXdhaXQgYnRuLmNsaWNrKCk7XG4gICAgICB9IGNhdGNoIChpZ24pIHt9XG4gICAgfVxuXG4gICAgYXdhaXQgZHJpdmVyLmdldCgnaHR0cDovL3NhdWNlbGFicy5jb20nKTtcblxuICAgIGF3YWl0IGRyaXZlci53YWl0Rm9yRWxlbWVudEJ5VGFnTmFtZShcInRpdGxlXCIpO1xuICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5lbGVtZW50QnlUYWdOYW1lKFwidGl0bGVcIik7XG4gICAgYXdhaXQgZWwuZ2V0QXR0cmlidXRlKFwiaW5uZXJIVE1MXCIpLnNob3VsZC5ldmVudHVhbGx5LmluY2x1ZGUoJ1NhdWNlIExhYnMnKTtcbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4ifQ==
