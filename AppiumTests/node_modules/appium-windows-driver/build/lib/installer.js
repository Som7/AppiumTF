'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _requestPromise = require('request-promise');

var _requestPromise2 = _interopRequireDefault(_requestPromise);

var _appiumSupport = require('appium-support');

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _teen_process = require('teen_process');

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

var WAD_VER = "1.0-RC2";
var WAD_DL = 'https://github.com/Microsoft/WinAppDriver/releases/download/v' + WAD_VER + '/WindowsApplicationDriver.msi';
var WAD_DL_MD5 = "eba6ac8097426fa2495b6058fdf8e4a5";

var WAD_INSTALL_PATH = process.env["ProgramFiles(x86)"] || process.env.ProgramFiles || "C:\\Program Files";
exports.WAD_INSTALL_PATH = WAD_INSTALL_PATH = _path2['default'].resolve(WAD_INSTALL_PATH, "Windows Application Driver", "WinAppDriver.exe");
var WAD_EXE_MD5 = "c976c90546398cf99a1e73ae533ca3a7";
var WAD_GUID = "DDCD58BF-37CF-4758-A15E-A60E7CF20E41";

function downloadWAD() {
  var tempFile, body, downloadedMd5;
  return _regeneratorRuntime.async(function downloadWAD$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _logger2['default'].info('Opening temp file to write WinAppDriver to...');
        tempFile = _path2['default'].resolve(process.env.TEMP, "WinAppDriver.msi");

        _logger2['default'].info('Will write to ' + tempFile);

        // actually download the msi file
        _logger2['default'].info('Downloading ' + WAD_DL + '...');
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(_requestPromise2['default'].get({ url: WAD_DL, encoding: 'binary' }));

      case 6:
        body = context$1$0.sent;

        _logger2['default'].info('Writing binary content to ' + tempFile + '...');
        context$1$0.next = 10;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.writeFile(tempFile, body, { encoding: 'binary' }));

      case 10:
        context$1$0.next = 12;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.md5(tempFile));

      case 12:
        downloadedMd5 = context$1$0.sent;

        if (!(downloadedMd5 !== WAD_DL_MD5)) {
          context$1$0.next = 15;
          break;
        }

        throw new Error('Checksum validation error: expected ' + WAD_DL_MD5 + ' but ' + ('got ' + downloadedMd5));

      case 15:
        return context$1$0.abrupt('return', tempFile);

      case 16:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function installWAD(msiPath) {
  return _regeneratorRuntime.async(function installWAD$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _logger2['default'].info("Running MSI installer...");
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap((0, _teen_process.exec)('msiexec', ['/i', msiPath, '/qn']));

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function verifyWAD() {
  return _regeneratorRuntime.async(function verifyWAD$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _logger2['default'].info("Verifying WinAppDriver is installed with correct checksum");
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.exists(WAD_INSTALL_PATH));

      case 3:
        context$1$0.t0 = context$1$0.sent;

        if (!context$1$0.t0) {
          context$1$0.next = 10;
          break;
        }

        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.md5(WAD_INSTALL_PATH));

      case 7:
        context$1$0.t1 = context$1$0.sent;
        context$1$0.t2 = WAD_EXE_MD5;
        context$1$0.t0 = context$1$0.t1 === context$1$0.t2;

      case 10:
        return context$1$0.abrupt('return', context$1$0.t0);

      case 11:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function isAdmin() {
  var testFilePath;
  return _regeneratorRuntime.async(function isAdmin$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        testFilePath = _path2['default'].resolve("/", "Windows", "System32", "wad-test.txt");
        context$1$0.prev = 1;
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.rimraf(testFilePath));

      case 4:
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.writeFile(testFilePath, "foo"));

      case 6:
        return context$1$0.abrupt('return', true);

      case 9:
        context$1$0.prev = 9;
        context$1$0.t0 = context$1$0['catch'](1);
        return context$1$0.abrupt('return', false);

      case 12:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[1, 9]]);
}

function setupWAD() {
  var msiPath;
  return _regeneratorRuntime.async(function setupWAD$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (_appiumSupport.system.isWindows()) {
          context$1$0.next = 2;
          break;
        }

        throw new Error("Can only download WinAppDriver on Windows!");

      case 2:
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(verifyWAD());

      case 4:
        if (!context$1$0.sent) {
          context$1$0.next = 7;
          break;
        }

        _logger2['default'].info("WinAppDriver.exe already exists at correct checksum, " + "not re-downloading");
        return context$1$0.abrupt('return');

      case 7:

        _logger2['default'].info("WinAppDriver.exe doesn't exist at the correct version, setting up");

        context$1$0.next = 10;
        return _regeneratorRuntime.awrap(isAdmin());

      case 10:
        if (context$1$0.sent) {
          context$1$0.next = 12;
          break;
        }

        throw new Error("You are not an administrator; please reinstall as admin");

      case 12:
        context$1$0.next = 14;
        return _regeneratorRuntime.awrap(downloadWAD());

      case 14:
        msiPath = context$1$0.sent;
        context$1$0.next = 17;
        return _regeneratorRuntime.awrap(installWAD(msiPath));

      case 17:
        context$1$0.next = 19;
        return _regeneratorRuntime.awrap(verifyWAD());

      case 19:
        if (context$1$0.sent) {
          context$1$0.next = 21;
          break;
        }

        throw new Error("Installed version of WinAppDriver failed checksum check");

      case 21:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

exports.downloadWAD = downloadWAD;
exports.setupWAD = setupWAD;
exports.verifyWAD = verifyWAD;
exports.installWAD = installWAD;
exports.WAD_INSTALL_PATH = WAD_INSTALL_PATH;
exports.WAD_GUID = WAD_GUID;
exports['default'] = setupWAD;

// validate checksum
//# sourceMappingURL=data:application/json;charset=utf8;base64,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cEQsb0JBQW9CLENBQUMsQ0FBQzs7Ozs7QUFJcEMsNEJBQUksSUFBSSxDQUFDLG1FQUFtRSxDQUFDLENBQUM7Ozt5Q0FFbkUsT0FBTyxFQUFFOzs7Ozs7OztjQUNaLElBQUksS0FBSyxDQUFDLHlEQUF5RCxDQUFDOzs7O3lDQUd0RCxXQUFXLEVBQUU7OztBQUE3QixlQUFPOzt5Q0FDUCxVQUFVLENBQUMsT0FBTyxDQUFDOzs7O3lDQUNkLFNBQVMsRUFBRTs7Ozs7Ozs7Y0FDZCxJQUFJLEtBQUssQ0FBQyx5REFBeUQsQ0FBQzs7Ozs7OztDQUU3RTs7UUFFUSxXQUFXLEdBQVgsV0FBVztRQUFFLFFBQVEsR0FBUixRQUFRO1FBQUUsU0FBUyxHQUFULFNBQVM7UUFBRSxVQUFVLEdBQVYsVUFBVTtRQUFFLGdCQUFnQixHQUFoQixnQkFBZ0I7UUFDOUQsUUFBUSxHQUFSLFFBQVE7cUJBQ0YsUUFBUSIsImZpbGUiOiJsaWIvaW5zdGFsbGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJlcXVlc3QgZnJvbSAncmVxdWVzdC1wcm9taXNlJztcbmltcG9ydCB7IHN5c3RlbSwgZnMgfSBmcm9tICdhcHBpdW0tc3VwcG9ydCc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IGV4ZWMgfSBmcm9tICd0ZWVuX3Byb2Nlc3MnO1xuaW1wb3J0IGxvZyBmcm9tICcuL2xvZ2dlcic7XG5cbmNvbnN0IFdBRF9WRVIgPSBcIjEuMC1SQzJcIjtcbmNvbnN0IFdBRF9ETCA9IGBodHRwczovL2dpdGh1Yi5jb20vTWljcm9zb2Z0L1dpbkFwcERyaXZlci9yZWxlYXNlcy9kb3dubG9hZC92JHtXQURfVkVSfS9XaW5kb3dzQXBwbGljYXRpb25Ecml2ZXIubXNpYDtcbmNvbnN0IFdBRF9ETF9NRDUgPSBcImViYTZhYzgwOTc0MjZmYTI0OTViNjA1OGZkZjhlNGE1XCI7XG5cbmxldCBXQURfSU5TVEFMTF9QQVRIID0gcHJvY2Vzcy5lbnZbXCJQcm9ncmFtRmlsZXMoeDg2KVwiXSB8fCBwcm9jZXNzLmVudi5Qcm9ncmFtRmlsZXMgfHwgXCJDOlxcXFxQcm9ncmFtIEZpbGVzXCI7XG5XQURfSU5TVEFMTF9QQVRIID0gcGF0aC5yZXNvbHZlKFdBRF9JTlNUQUxMX1BBVEgsIFwiV2luZG93cyBBcHBsaWNhdGlvbiBEcml2ZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJXaW5BcHBEcml2ZXIuZXhlXCIpO1xuY29uc3QgV0FEX0VYRV9NRDUgPSBcImM5NzZjOTA1NDYzOThjZjk5YTFlNzNhZTUzM2NhM2E3XCI7XG5jb25zdCBXQURfR1VJRCA9IFwiRERDRDU4QkYtMzdDRi00NzU4LUExNUUtQTYwRTdDRjIwRTQxXCI7XG5cbmFzeW5jIGZ1bmN0aW9uIGRvd25sb2FkV0FEICgpIHtcbiAgbG9nLmluZm8oYE9wZW5pbmcgdGVtcCBmaWxlIHRvIHdyaXRlIFdpbkFwcERyaXZlciB0by4uLmApO1xuICBsZXQgdGVtcEZpbGUgPSBwYXRoLnJlc29sdmUocHJvY2Vzcy5lbnYuVEVNUCwgXCJXaW5BcHBEcml2ZXIubXNpXCIpO1xuICBsb2cuaW5mbyhgV2lsbCB3cml0ZSB0byAke3RlbXBGaWxlfWApO1xuXG4gIC8vIGFjdHVhbGx5IGRvd25sb2FkIHRoZSBtc2kgZmlsZVxuICBsb2cuaW5mbyhgRG93bmxvYWRpbmcgJHtXQURfREx9Li4uYCk7XG4gIGxldCBib2R5ID0gYXdhaXQgcmVxdWVzdC5nZXQoe3VybDogV0FEX0RMLCBlbmNvZGluZzogJ2JpbmFyeSd9KTtcbiAgbG9nLmluZm8oYFdyaXRpbmcgYmluYXJ5IGNvbnRlbnQgdG8gJHt0ZW1wRmlsZX0uLi5gKTtcbiAgYXdhaXQgZnMud3JpdGVGaWxlKHRlbXBGaWxlLCBib2R5LCB7ZW5jb2Rpbmc6ICdiaW5hcnknfSk7XG5cbiAgLy8gdmFsaWRhdGUgY2hlY2tzdW1cbiAgbGV0IGRvd25sb2FkZWRNZDUgPSBhd2FpdCBmcy5tZDUodGVtcEZpbGUpO1xuICBpZiAoZG93bmxvYWRlZE1kNSAhPT0gV0FEX0RMX01ENSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgQ2hlY2tzdW0gdmFsaWRhdGlvbiBlcnJvcjogZXhwZWN0ZWQgJHtXQURfRExfTUQ1fSBidXQgYCArXG4gICAgICAgICAgICAgICAgICAgIGBnb3QgJHtkb3dubG9hZGVkTWQ1fWApO1xuICB9XG5cbiAgcmV0dXJuIHRlbXBGaWxlO1xufVxuXG5hc3luYyBmdW5jdGlvbiBpbnN0YWxsV0FEIChtc2lQYXRoKSB7XG4gIGxvZy5pbmZvKFwiUnVubmluZyBNU0kgaW5zdGFsbGVyLi4uXCIpO1xuICBhd2FpdCBleGVjKCdtc2lleGVjJywgWycvaScsIG1zaVBhdGgsICcvcW4nXSk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHZlcmlmeVdBRCAoKSB7XG4gIGxvZy5pbmZvKFwiVmVyaWZ5aW5nIFdpbkFwcERyaXZlciBpcyBpbnN0YWxsZWQgd2l0aCBjb3JyZWN0IGNoZWNrc3VtXCIpO1xuICByZXR1cm4gYXdhaXQgZnMuZXhpc3RzKFdBRF9JTlNUQUxMX1BBVEgpICYmXG4gICAgICAgICBhd2FpdCBmcy5tZDUoV0FEX0lOU1RBTExfUEFUSCkgPT09IFdBRF9FWEVfTUQ1O1xufVxuXG5hc3luYyBmdW5jdGlvbiBpc0FkbWluICgpIHtcbiAgbGV0IHRlc3RGaWxlUGF0aCA9IHBhdGgucmVzb2x2ZShcIi9cIiwgXCJXaW5kb3dzXCIsIFwiU3lzdGVtMzJcIiwgXCJ3YWQtdGVzdC50eHRcIik7XG4gIHRyeSB7XG4gICAgYXdhaXQgZnMucmltcmFmKHRlc3RGaWxlUGF0aCk7XG4gICAgYXdhaXQgZnMud3JpdGVGaWxlKHRlc3RGaWxlUGF0aCwgXCJmb29cIik7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGlnbikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5hc3luYyBmdW5jdGlvbiBzZXR1cFdBRCAoKSB7XG4gIGlmICghc3lzdGVtLmlzV2luZG93cygpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ2FuIG9ubHkgZG93bmxvYWQgV2luQXBwRHJpdmVyIG9uIFdpbmRvd3MhXCIpO1xuICB9XG5cbiAgaWYgKGF3YWl0IHZlcmlmeVdBRCgpKSB7XG4gICAgbG9nLmluZm8oXCJXaW5BcHBEcml2ZXIuZXhlIGFscmVhZHkgZXhpc3RzIGF0IGNvcnJlY3QgY2hlY2tzdW0sIFwiICtcbiAgICAgICAgICAgICAgICBcIm5vdCByZS1kb3dubG9hZGluZ1wiKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBsb2cuaW5mbyhcIldpbkFwcERyaXZlci5leGUgZG9lc24ndCBleGlzdCBhdCB0aGUgY29ycmVjdCB2ZXJzaW9uLCBzZXR0aW5nIHVwXCIpO1xuXG4gIGlmICghYXdhaXQgaXNBZG1pbigpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IGFyZSBub3QgYW4gYWRtaW5pc3RyYXRvcjsgcGxlYXNlIHJlaW5zdGFsbCBhcyBhZG1pblwiKTtcbiAgfVxuXG4gIGNvbnN0IG1zaVBhdGggPSBhd2FpdCBkb3dubG9hZFdBRCgpO1xuICBhd2FpdCBpbnN0YWxsV0FEKG1zaVBhdGgpO1xuICBpZiAoIWF3YWl0IHZlcmlmeVdBRCgpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW5zdGFsbGVkIHZlcnNpb24gb2YgV2luQXBwRHJpdmVyIGZhaWxlZCBjaGVja3N1bSBjaGVja1wiKTtcbiAgfVxufVxuXG5leHBvcnQgeyBkb3dubG9hZFdBRCwgc2V0dXBXQUQsIHZlcmlmeVdBRCwgaW5zdGFsbFdBRCwgV0FEX0lOU1RBTExfUEFUSCxcbiAgICAgICAgIFdBRF9HVUlEIH07XG5leHBvcnQgZGVmYXVsdCBzZXR1cFdBRDtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==
